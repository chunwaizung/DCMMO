// Generated by github.com/davyxu/tabtoy
// Version: 2.9.0
// DO NOT EDIT!!
using System.Collections.Generic;

namespace DC
{
	
	

	// Defined in table: JobCfgMgr
	
	public partial class JobCfgMgr
	{
	
		public tabtoy.Logger TableLogger = new tabtoy.Logger();
	
		
		/// <summary> 
		/// JobConfig
		/// </summary>
		public List<JobConfigDefine> JobConfig = new List<JobConfigDefine>(); 
	
	
		#region Index code
	 	Dictionary<int, JobConfigDefine> _JobConfigByID = new Dictionary<int, JobConfigDefine>();
        public JobConfigDefine GetJobConfigByID(int ID, JobConfigDefine def = default(JobConfigDefine))
        {
            JobConfigDefine ret;
            if ( _JobConfigByID.TryGetValue( ID, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(JobConfigDefine) )
			{
				TableLogger.ErrorLine("GetJobConfigByID failed, ID: {0}", ID);
			}

            return def;
        }
		
		public string GetBuildID(){
			return "d41d8cd98f00b204e9800998ecf8427e";
		}
	
		#endregion
		#region Deserialize code
		
		static tabtoy.DeserializeHandler<JobCfgMgr> _JobCfgMgrDeserializeHandler;
		static tabtoy.DeserializeHandler<JobCfgMgr> JobCfgMgrDeserializeHandler
		{
			get
			{
				if (_JobCfgMgrDeserializeHandler == null )
				{
					_JobCfgMgrDeserializeHandler = new tabtoy.DeserializeHandler<JobCfgMgr>(Deserialize);
				}

				return _JobCfgMgrDeserializeHandler;
			}
		}
		public static void Deserialize( JobCfgMgr ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0xa0000:
                	{
						ins.JobConfig.Add( reader.ReadStruct<JobConfigDefine>(JobConfigDefineDeserializeHandler) );
                	}
                	break; 
                }
             } 

			
			// Build JobConfig Index
			for( int i = 0;i< ins.JobConfig.Count;i++)
			{
				var element = ins.JobConfig[i];
				
				ins._JobConfigByID.Add(element.ID, element);
				
			}
			
		}
		static tabtoy.DeserializeHandler<JobConfigDefine> _JobConfigDefineDeserializeHandler;
		static tabtoy.DeserializeHandler<JobConfigDefine> JobConfigDefineDeserializeHandler
		{
			get
			{
				if (_JobConfigDefineDeserializeHandler == null )
				{
					_JobConfigDefineDeserializeHandler = new tabtoy.DeserializeHandler<JobConfigDefine>(Deserialize);
				}

				return _JobConfigDefineDeserializeHandler;
			}
		}
		public static void Deserialize( JobConfigDefine ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0x10000:
                	{
						ins.ID = reader.ReadInt32();
                	}
                	break; 
                	case 0x10001:
                	{
						ins.JobType = reader.ReadInt32();
                	}
                	break; 
                	case 0x10002:
                	{
						ins.Level = reader.ReadInt32();
                	}
                	break; 
                	case 0x10003:
                	{
						ins.MaxHp = reader.ReadInt32();
                	}
                	break; 
                	case 0x10004:
                	{
						ins.MaxMp = reader.ReadInt32();
                	}
                	break; 
                	case 0x10005:
                	{
						ins.PhysicAtk = reader.ReadInt32();
                	}
                	break; 
                	case 0x10006:
                	{
						ins.MagicAtk = reader.ReadInt32();
                	}
                	break; 
                	case 0x10007:
                	{
						ins.PhysicDef = reader.ReadInt32();
                	}
                	break; 
                	case 0x10008:
                	{
						ins.MagicDef = reader.ReadInt32();
                	}
                	break; 
                	case 0x10009:
                	{
						ins.LvUpExp = reader.ReadInt32();
                	}
                	break; 
                }
             } 

			
		}
		#endregion
	

	} 

	// Defined in table: JobConfig
	[System.Serializable]
	public partial class JobConfigDefine
	{
	
		
		/// <summary> 
		/// ID
		/// </summary>
		public int ID = 0; 
		
		/// <summary> 
		/// 职业
		/// </summary>
		public int JobType = 0; 
		
		/// <summary> 
		/// 等级
		/// </summary>
		public int Level = 0; 
		
		/// <summary> 
		/// 最大血量
		/// </summary>
		public int MaxHp = 0; 
		
		/// <summary> 
		/// 最大蓝量
		/// </summary>
		public int MaxMp = 0; 
		
		/// <summary> 
		/// 物攻
		/// </summary>
		public int PhysicAtk = 0; 
		
		/// <summary> 
		/// 魔攻
		/// </summary>
		public int MagicAtk = 0; 
		
		/// <summary> 
		/// 物防
		/// </summary>
		public int PhysicDef = 0; 
		
		/// <summary> 
		/// 魔防
		/// </summary>
		public int MagicDef = 0; 
		
		/// <summary> 
		/// 升级所需经验
		/// </summary>
		public int LvUpExp = 0; 
	
	

	} 

}
