// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Player.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dcgameprotobuf {

  /// <summary>Holder for reflection information generated from Player.proto</summary>
  public static partial class PlayerReflection {

    #region Descriptor
    /// <summary>File descriptor for Player.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxQbGF5ZXIucHJvdG8SDmRjZ2FtZXByb3RvYnVmIh0KCFBSb2xlUmVxEhEK",
            "CXVzZXJUb2tlbhgBIAEoCSJfCglQUm9sZUluZm8SDAoEbmFtZRgBIAEoCRIl",
            "CgNqb2IYAiABKA4yGC5kY2dhbWVwcm90b2J1Zi5QSm9iVHlwZRINCgVsZXZl",
            "bBgDIAEoBRIOCgZyb2xlSWQYBCABKAUiRQoIUFJvbGVSZXMSDwoHZXJyb3JO",
            "bxgBIAEoBRIoCgVpbmZvcxgCIAMoCzIZLmRjZ2FtZXByb3RvYnVmLlBSb2xl",
            "SW5mbyIeCgxQTG9naW5TdnJSZXESDgoGcm9sZUlkGAEgASgFIh0KDFBMb2dp",
            "blN2clJlcxINCgVlcnJvchgBIAEoCCJCCgtQQWRkUm9sZVJlcRIlCgNqb2IY",
            "ASABKA4yGC5kY2dhbWVwcm90b2J1Zi5QSm9iVHlwZRIMCgRuYW1lGAIgASgJ",
            "IkUKC1BBZGRSb2xlUmVzEg0KBWVycm9yGAEgASgIEicKBGluZm8YAiABKAsy",
            "GS5kY2dhbWVwcm90b2J1Zi5QUm9sZUluZm8qLgoIUEpvYlR5cGUSCQoFU2Fi",
            "ZXIQABIJCgVNYWdpYxABEgwKCERlZmVuZGVyEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Dcgameprotobuf.PJobType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dcgameprotobuf.PRoleReq), global::Dcgameprotobuf.PRoleReq.Parser, new[]{ "UserToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dcgameprotobuf.PRoleInfo), global::Dcgameprotobuf.PRoleInfo.Parser, new[]{ "Name", "Job", "Level", "RoleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dcgameprotobuf.PRoleRes), global::Dcgameprotobuf.PRoleRes.Parser, new[]{ "ErrorNo", "Infos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dcgameprotobuf.PLoginSvrReq), global::Dcgameprotobuf.PLoginSvrReq.Parser, new[]{ "RoleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dcgameprotobuf.PLoginSvrRes), global::Dcgameprotobuf.PLoginSvrRes.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dcgameprotobuf.PAddRoleReq), global::Dcgameprotobuf.PAddRoleReq.Parser, new[]{ "Job", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dcgameprotobuf.PAddRoleRes), global::Dcgameprotobuf.PAddRoleRes.Parser, new[]{ "Error", "Info" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PJobType {
    [pbr::OriginalName("Saber")] Saber = 0,
    [pbr::OriginalName("Magic")] Magic = 1,
    [pbr::OriginalName("Defender")] Defender = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///请求角色列表
  ///1010001
  /// </summary>
  public sealed partial class PRoleReq : pb::IMessage<PRoleReq> {
    private static readonly pb::MessageParser<PRoleReq> _parser = new pb::MessageParser<PRoleReq>(() => new PRoleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PRoleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dcgameprotobuf.PlayerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PRoleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PRoleReq(PRoleReq other) : this() {
      userToken_ = other.userToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PRoleReq Clone() {
      return new PRoleReq(this);
    }

    /// <summary>Field number for the "userToken" field.</summary>
    public const int UserTokenFieldNumber = 1;
    private string userToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserToken {
      get { return userToken_; }
      set {
        userToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PRoleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PRoleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserToken != other.UserToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserToken.Length != 0) hash ^= UserToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PRoleReq other) {
      if (other == null) {
        return;
      }
      if (other.UserToken.Length != 0) {
        UserToken = other.UserToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PRoleInfo : pb::IMessage<PRoleInfo> {
    private static readonly pb::MessageParser<PRoleInfo> _parser = new pb::MessageParser<PRoleInfo>(() => new PRoleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PRoleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dcgameprotobuf.PlayerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PRoleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PRoleInfo(PRoleInfo other) : this() {
      name_ = other.name_;
      job_ = other.job_;
      level_ = other.level_;
      roleId_ = other.roleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PRoleInfo Clone() {
      return new PRoleInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "job" field.</summary>
    public const int JobFieldNumber = 2;
    private global::Dcgameprotobuf.PJobType job_ = global::Dcgameprotobuf.PJobType.Saber;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dcgameprotobuf.PJobType Job {
      get { return job_; }
      set {
        job_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 4;
    private int roleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PRoleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PRoleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Job != other.Job) return false;
      if (Level != other.Level) return false;
      if (RoleId != other.RoleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Job != global::Dcgameprotobuf.PJobType.Saber) hash ^= Job.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Job != global::Dcgameprotobuf.PJobType.Saber) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Job);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (RoleId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RoleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Job != global::Dcgameprotobuf.PJobType.Saber) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Job);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PRoleInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Job != global::Dcgameprotobuf.PJobType.Saber) {
        Job = other.Job;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Job = (global::Dcgameprotobuf.PJobType) input.ReadEnum();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            RoleId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///1010002
  /// </summary>
  public sealed partial class PRoleRes : pb::IMessage<PRoleRes> {
    private static readonly pb::MessageParser<PRoleRes> _parser = new pb::MessageParser<PRoleRes>(() => new PRoleRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PRoleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dcgameprotobuf.PlayerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PRoleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PRoleRes(PRoleRes other) : this() {
      errorNo_ = other.errorNo_;
      infos_ = other.infos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PRoleRes Clone() {
      return new PRoleRes(this);
    }

    /// <summary>Field number for the "errorNo" field.</summary>
    public const int ErrorNoFieldNumber = 1;
    private int errorNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorNo {
      get { return errorNo_; }
      set {
        errorNo_ = value;
      }
    }

    /// <summary>Field number for the "infos" field.</summary>
    public const int InfosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Dcgameprotobuf.PRoleInfo> _repeated_infos_codec
        = pb::FieldCodec.ForMessage(18, global::Dcgameprotobuf.PRoleInfo.Parser);
    private readonly pbc::RepeatedField<global::Dcgameprotobuf.PRoleInfo> infos_ = new pbc::RepeatedField<global::Dcgameprotobuf.PRoleInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dcgameprotobuf.PRoleInfo> Infos {
      get { return infos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PRoleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PRoleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorNo != other.ErrorNo) return false;
      if(!infos_.Equals(other.infos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorNo != 0) hash ^= ErrorNo.GetHashCode();
      hash ^= infos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorNo != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorNo);
      }
      infos_.WriteTo(output, _repeated_infos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorNo);
      }
      size += infos_.CalculateSize(_repeated_infos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PRoleRes other) {
      if (other == null) {
        return;
      }
      if (other.ErrorNo != 0) {
        ErrorNo = other.ErrorNo;
      }
      infos_.Add(other.infos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorNo = input.ReadInt32();
            break;
          }
          case 18: {
            infos_.AddEntriesFrom(input, _repeated_infos_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///登录游戏服务器发送获得的roleId用来定位当前登录的角色
  ///1010003
  /// </summary>
  public sealed partial class PLoginSvrReq : pb::IMessage<PLoginSvrReq> {
    private static readonly pb::MessageParser<PLoginSvrReq> _parser = new pb::MessageParser<PLoginSvrReq>(() => new PLoginSvrReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PLoginSvrReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dcgameprotobuf.PlayerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PLoginSvrReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PLoginSvrReq(PLoginSvrReq other) : this() {
      roleId_ = other.roleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PLoginSvrReq Clone() {
      return new PLoginSvrReq(this);
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 1;
    private int roleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PLoginSvrReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PLoginSvrReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoleId != other.RoleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PLoginSvrReq other) {
      if (other == null) {
        return;
      }
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoleId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///登录成功
  ///1010004
  /// </summary>
  public sealed partial class PLoginSvrRes : pb::IMessage<PLoginSvrRes> {
    private static readonly pb::MessageParser<PLoginSvrRes> _parser = new pb::MessageParser<PLoginSvrRes>(() => new PLoginSvrRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PLoginSvrRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dcgameprotobuf.PlayerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PLoginSvrRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PLoginSvrRes(PLoginSvrRes other) : this() {
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PLoginSvrRes Clone() {
      return new PLoginSvrRes(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private bool error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PLoginSvrRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PLoginSvrRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != false) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != false) {
        output.WriteRawTag(8);
        output.WriteBool(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PLoginSvrRes other) {
      if (other == null) {
        return;
      }
      if (other.Error != false) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///添加角色
  ///1010005
  /// </summary>
  public sealed partial class PAddRoleReq : pb::IMessage<PAddRoleReq> {
    private static readonly pb::MessageParser<PAddRoleReq> _parser = new pb::MessageParser<PAddRoleReq>(() => new PAddRoleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PAddRoleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dcgameprotobuf.PlayerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PAddRoleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PAddRoleReq(PAddRoleReq other) : this() {
      job_ = other.job_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PAddRoleReq Clone() {
      return new PAddRoleReq(this);
    }

    /// <summary>Field number for the "job" field.</summary>
    public const int JobFieldNumber = 1;
    private global::Dcgameprotobuf.PJobType job_ = global::Dcgameprotobuf.PJobType.Saber;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dcgameprotobuf.PJobType Job {
      get { return job_; }
      set {
        job_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PAddRoleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PAddRoleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Job != other.Job) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Job != global::Dcgameprotobuf.PJobType.Saber) hash ^= Job.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Job != global::Dcgameprotobuf.PJobType.Saber) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Job);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Job != global::Dcgameprotobuf.PJobType.Saber) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Job);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PAddRoleReq other) {
      if (other == null) {
        return;
      }
      if (other.Job != global::Dcgameprotobuf.PJobType.Saber) {
        Job = other.Job;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Job = (global::Dcgameprotobuf.PJobType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///添加角色
  ///1010006
  /// </summary>
  public sealed partial class PAddRoleRes : pb::IMessage<PAddRoleRes> {
    private static readonly pb::MessageParser<PAddRoleRes> _parser = new pb::MessageParser<PAddRoleRes>(() => new PAddRoleRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PAddRoleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dcgameprotobuf.PlayerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PAddRoleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PAddRoleRes(PAddRoleRes other) : this() {
      error_ = other.error_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PAddRoleRes Clone() {
      return new PAddRoleRes(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private bool error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Dcgameprotobuf.PRoleInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dcgameprotobuf.PRoleInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PAddRoleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PAddRoleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != false) hash ^= Error.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != false) {
        output.WriteRawTag(8);
        output.WriteBool(Error);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != false) {
        size += 1 + 1;
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PAddRoleRes other) {
      if (other == null) {
        return;
      }
      if (other.Error != false) {
        Error = other.Error;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Dcgameprotobuf.PRoleInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = input.ReadBool();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Dcgameprotobuf.PRoleInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
