// Generated by github.com/davyxu/tabtoy
// Version: 2.9.0
// DO NOT EDIT!!
using System.Collections.Generic;

namespace DC
{
	
	

	// Defined in table: DemoCfgMgr
	
	public partial class DemoCfgMgr
	{
	
		public tabtoy.Logger TableLogger = new tabtoy.Logger();
	
		
		/// <summary> 
		/// Demo
		/// </summary>
		public List<DemoDefine> Demo = new List<DemoDefine>(); 
	
	
		#region Index code
	 	Dictionary<int, DemoDefine> _DemoByID = new Dictionary<int, DemoDefine>();
        public DemoDefine GetDemoByID(int ID, DemoDefine def = default(DemoDefine))
        {
            DemoDefine ret;
            if ( _DemoByID.TryGetValue( ID, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(DemoDefine) )
			{
				TableLogger.ErrorLine("GetDemoByID failed, ID: {0}", ID);
			}

            return def;
        }
		Dictionary<string, DemoDefine> _DemoByName = new Dictionary<string, DemoDefine>();
        public DemoDefine GetDemoByName(string Name, DemoDefine def = default(DemoDefine))
        {
            DemoDefine ret;
            if ( _DemoByName.TryGetValue( Name, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(DemoDefine) )
			{
				TableLogger.ErrorLine("GetDemoByName failed, Name: {0}", Name);
			}

            return def;
        }
		
		public string GetBuildID(){
			return "d41d8cd98f00b204e9800998ecf8427e";
		}
	
		#endregion
		#region Deserialize code
		
		static tabtoy.DeserializeHandler<DemoCfgMgr> _DemoCfgMgrDeserializeHandler;
		static tabtoy.DeserializeHandler<DemoCfgMgr> DemoCfgMgrDeserializeHandler
		{
			get
			{
				if (_DemoCfgMgrDeserializeHandler == null )
				{
					_DemoCfgMgrDeserializeHandler = new tabtoy.DeserializeHandler<DemoCfgMgr>(Deserialize);
				}

				return _DemoCfgMgrDeserializeHandler;
			}
		}
		public static void Deserialize( DemoCfgMgr ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0xa0000:
                	{
						ins.Demo.Add( reader.ReadStruct<DemoDefine>(DemoDefineDeserializeHandler) );
                	}
                	break; 
                }
             } 

			
			// Build Demo Index
			for( int i = 0;i< ins.Demo.Count;i++)
			{
				var element = ins.Demo[i];
				
				ins._DemoByID.Add(element.ID, element);
				
				ins._DemoByName.Add(element.Name, element);
				
			}
			
		}
		static tabtoy.DeserializeHandler<DemoDefine> _DemoDefineDeserializeHandler;
		static tabtoy.DeserializeHandler<DemoDefine> DemoDefineDeserializeHandler
		{
			get
			{
				if (_DemoDefineDeserializeHandler == null )
				{
					_DemoDefineDeserializeHandler = new tabtoy.DeserializeHandler<DemoDefine>(Deserialize);
				}

				return _DemoDefineDeserializeHandler;
			}
		}
		public static void Deserialize( DemoDefine ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0x10000:
                	{
						ins.ID = reader.ReadInt32();
                	}
                	break; 
                	case 0x60001:
                	{
						ins.Name = reader.ReadString();
                	}
                	break; 
                	case 0x50002:
                	{
						ins.HP = reader.ReadFloat();
                	}
                	break; 
                	case 0x10003:
                	{
						ins.Skills.Add( reader.ReadInt32() );
                	}
                	break; 
                }
             } 

			
		}
		#endregion
	

	} 

	// Defined in table: Demo
	[System.Serializable]
	public partial class DemoDefine
	{
	
		
		/// <summary> 
		/// ID
		/// </summary>
		public int ID = 0; 
		
		/// <summary> 
		/// 名称
		/// </summary>
		public string Name = ""; 
		
		/// <summary> 
		/// 血量上限
		/// </summary>
		public float HP = 0f; 
		
		/// <summary> 
		/// 技能列表
		/// </summary>
		public List<int> Skills = new List<int>(); 
	
	

	} 

}
